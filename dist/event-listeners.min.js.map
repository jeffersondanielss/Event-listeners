{"version":3,"sources":["index.js"],"names":["app","document","getAllElements","Array","from","querySelectorAll","elementHasEvent","arr","hasEvent","filter","curr","events","getEventListeners","Object","keys","length","getEvent","map","listeners","showEvents","getIdentity","el","elClasse","getAttribute","elId","Identity","setStyle","style","offsetTop","offsetLeft","listners","newElement","createElement","id","setAttribute","innerHTML","listener","name","type","getElementsByTagName","appendChild","eventListeners","allElements","elementWithEvent","this","view","console","_console","apply","arguments","toString","log","window"],"mappings":"cAAA,SAAGA,EAAKC,GAKND,EAAIE,eAAiB,WACnB,MAAOC,OAAMC,KAAKH,EAASI,iBAAiB,YAI9CL,EAAIM,gBAAkB,SAAEC,GACtB,GAAIC,GAAWD,EAAIE,OAAQ,SAAEC,GAC3B,GAAIC,GAASC,kBAAmBF,EAChC,OAAOG,QAAOC,KAAKH,GAAQI,OAAS,GAGtC,OAAOP,IAITR,EAAIgB,SAAW,SAAET,GACfA,EAAIU,IAAK,SAAEP,GACT,GAAIQ,GAAYN,kBAAmBF,GAC/BC,EAASE,OAAOC,KAAKI,EAEzBlB,GAAImB,WAAWT,EAAMC,EAAQO,MAKjClB,EAAIoB,YAAc,SAAEC,GAClB,GAAIC,GAAWD,EAAGE,aAAa,SAC3BC,EAAOH,EAAGE,aAAa,MACvBE,EAAYH,EAAYA,EAAWE,CAEvC,OAAOC,IAGTzB,EAAI0B,SAAW,SAAEL,GACf,GAAIM,GAAA,QAAgBN,EAAGO,UAAnB,KAUJ,OATID,IAAA,SAAkBN,EAAGQ,WAArB,MACAF,GAAA,sBACAA,GAAA,gBACAA,GAAA,iBACAA,GAAA,kBACAA,GAAA,6BACAA,GAAA,6BACAA,GAAA,oBAMN3B,EAAImB,WAAa,SAAEE,EAAIV,EAAQmB,GAC7B,GAAIC,GAAa9B,EAAS+B,cAAc,OACpCC,EAAKjC,EAAIoB,YAAaC,GACtBM,EAAQD,SAAUL,EAEtBU,GAAWG,aAAa,QAAS,SACjCH,EAAWG,aAAa,QAASP,GAEjChB,EAAOM,IAAI,SAAEP,GACXqB,EAAWI,UAAX,SAAgCF,EAAhC,gBAAkDH,EAASpB,GAAM,GAAG0B,SAASC,KAA7E,kBAAmGP,EAASpB,GAAM,GAAG4B,OAGvHrC,EAASsC,qBAAqB,QAAQ,GAAGC,YAAYT,IAKvD/B,EAAIyC,gBACFC,YAAaxC,iBAEbyC,iBAHmB,WAIjB,MAAO3C,GAAIM,gBAAiBsC,KAAKF,cAGnCG,KAPmB,WAQjB7B,SAAU4B,KAAKD,qBAGjBG,QAXmB,SAAAC,GAAA,QAAAD,KAAA,MAAAC,GAAAC,MAAAJ,KAAAK,WAAA,MAAAH,GAAAI,SAAA,WAAA,MAAAH,GAAAG,YAAAJ,GAAA,WAYjBF,KAAKD,mBAAmB1B,IAAI,SAAEP,GAC5BoC,QAAQK,IAAKzC,SAKjB0C,OAAQnD","file":"event-listeners.min.js","sourcesContent":["(( app, document ) => {\r\n\r\n  'use strict';\r\n\r\n  // Get all the DOM elements\r\n  app.getAllElements = () => {\r\n    return Array.from(document.querySelectorAll('body *'));\r\n  };\r\n\r\n  // Filters only the elements that have event\r\n  app.elementHasEvent = ( arr ) => {\r\n    let hasEvent = arr.filter( ( curr ) => {\r\n      let events = getEventListeners( curr );\r\n      return Object.keys(events).length > 0;\r\n    });\r\n\r\n    return hasEvent;\r\n  };\r\n\r\n  // Takes the function and the event on the element\r\n  app.getEvent = ( arr ) => {\r\n    arr.map( ( curr ) => {\r\n      let listeners = getEventListeners( curr );\r\n      let events = Object.keys(listeners);\r\n\r\n      app.showEvents(curr, events, listeners);\r\n    });\r\n  };\r\n\r\n  // Get identity of element\r\n  app.getIdentity = ( el ) => {\r\n    let elClasse = el.getAttribute('class');\r\n    let elId = el.getAttribute('id');\r\n    let Identity = (elClasse) ? elClasse : elId;\r\n\r\n    return Identity;\r\n  }\r\n\r\n  app.setStyle = ( el ) => {\r\n    let style = `top: ${el.offsetTop}px;`;\r\n        style += `left: ${el.offsetLeft}px;`;\r\n        style += `position: absolute;`;\r\n        style += `z-index: 999;`;\r\n        style += `padding: 10px;`;\r\n        style += `color: #0ea5a3;`;\r\n        style += `background-color: #ace0df;`;\r\n        style += `border: 1px solid #00C2C1;`;\r\n        style += `font-size: 14px;`;\r\n\r\n    return style;\r\n  };\r\n\r\n  //Displays the element, event and function.\r\n  app.showEvents = ( el, events, listners ) => {\r\n    let newElement = document.createElement('div');\r\n    let id = app.getIdentity( el );\r\n    let style = setStyle( el );\r\n\r\n    newElement.setAttribute('class', 'event');\r\n    newElement.setAttribute('style', style);\r\n\r\n    events.map(( curr ) => {\r\n      newElement.innerHTML = `[id]: ${id}, [fn name]: ${listners[curr][0].listener.name}, [eventName]: ${listners[curr][0].type}`;\r\n    });\r\n\r\n    document.getElementsByTagName('body')[0].appendChild(newElement);\r\n  }\r\n\r\n\r\n  //Init functions\r\n  app.eventListeners = {\r\n    allElements: getAllElements(),\r\n\r\n    elementWithEvent () {\r\n      return app.elementHasEvent( this.allElements );\r\n    },\r\n\r\n    view () {\r\n      getEvent( this.elementWithEvent() );\r\n    },\r\n\r\n    console () {\r\n      this.elementWithEvent().map(( curr ) => {\r\n        console.log( curr );\r\n      });\r\n    }\r\n  };\r\n\r\n})( window, document );\r\n"],"sourceRoot":"/source/"}