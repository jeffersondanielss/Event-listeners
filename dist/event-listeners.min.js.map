{"version":3,"sources":["index.js"],"names":["app","document","getAllElements","Array","from","querySelectorAll","elementHasEvent","arr","hasEvent","filter","curr","events","getEventListeners","Object","keys","length","getEvent","map","listeners","showEvents","getIdentity","el","elClasse","getAttribute","elId","Identity","setStyle","style","offsetTop","offsetLeft","listners","newElement","createElement","id","setAttribute","innerHTML","type","listener","name","getElementsByTagName","appendChild","eventListeners","allElements","elementWithEvent","this","view","console","_console","apply","arguments","toString","log","window"],"mappings":"cAAA,SAAGA,EAAKC,GAKND,EAAIE,eAAiB,WACnB,MAAOC,OAAMC,KAAKH,EAASI,iBAAiB,YAI9CL,EAAIM,gBAAkB,SAAEC,GACtB,GAAIC,GAAWD,EAAIE,OAAQ,SAAEC,GAC3B,GAAIC,GAASC,kBAAmBF,EAChC,OAAOG,QAAOC,KAAKH,GAAQI,OAAS,GAGtC,OAAOP,IAITR,EAAIgB,SAAW,SAAET,GACfA,EAAIU,IAAK,SAAEP,GACT,GAAIQ,GAAYN,kBAAmBF,GAC/BC,EAASE,OAAOC,KAAKI,EAEzBlB,GAAImB,WAAWT,EAAMC,EAAQO,MAKjClB,EAAIoB,YAAc,SAAEC,GAClB,GAAIC,GAAWD,EAAGE,aAAa,SAC3BC,EAAOH,EAAGE,aAAa,MACvBE,EAAYH,EAAD,IAAiBA,EAAjB,IAAkCE,CAEjD,OAAOC,IAGTzB,EAAI0B,SAAW,SAAEL,GACf,GAAIM,GAAA,SAAgBN,EAAGO,UAAY,GAA/B,KAWJ,OAVID,IAAA,UAAkBN,EAAGQ,WAAa,GAAlC,MACAF,GAAA,sBACAA,GAAA,gBACAA,GAAA,gBACAA,GAAA,kBACAA,GAAA,6BACAA,GAAA,6BACAA,GAAA,mBACAA,GAAA,iBAMN3B,EAAImB,WAAa,SAAEE,EAAIV,EAAQmB,GAC7B,GAAIC,GAAa9B,EAAS+B,cAAc,OACpCC,EAAKjC,EAAIoB,YAAaC,GACtBM,EAAQD,SAAUL,EAEtBU,GAAWG,aAAa,QAAS,SACjCH,EAAWG,aAAa,QAASP,GAEjChB,EAAOM,IAAI,SAAEP,GACXqB,EAAWI,UAAeF,EAA1B,MAAkCH,EAASpB,GAAM,GAAG0B,KAApD,MAA8DN,EAASpB,GAAM,GAAG2B,SAASC,KAAzF,OAGFrC,EAASsC,qBAAqB,QAAQ,GAAGC,YAAYT,IAKvD/B,EAAIyC,gBACFC,YAAaxC,iBAEbyC,iBAHmB,WAIjB,MAAO3C,GAAIM,gBAAiBsC,KAAKF,cAGnCG,KAPmB,WAQjB7B,SAAU4B,KAAKD,qBAGjBG,QAXmB,SAAAC,GAAA,QAAAD,KAAA,MAAAC,GAAAC,MAAAJ,KAAAK,WAAA,MAAAH,GAAAI,SAAA,WAAA,MAAAH,GAAAG,YAAAJ,GAAA,WAYjBF,KAAKD,mBAAmB1B,IAAI,SAAEP,GAC5BoC,QAAQK,IAAKzC,SAKjB0C,OAAQnD","file":"event-listeners.min.js","sourcesContent":["(( app, document ) => {\n\n  'use strict';\n\n  // Get all the DOM elements\n  app.getAllElements = () => {\n    return Array.from(document.querySelectorAll('body *'));\n  };\n\n  // Filters only the elements that have event\n  app.elementHasEvent = ( arr ) => {\n    let hasEvent = arr.filter( ( curr ) => {\n      let events = getEventListeners( curr );\n      return Object.keys(events).length > 0;\n    });\n\n    return hasEvent;\n  };\n\n  // Takes the function and the event on the element\n  app.getEvent = ( arr ) => {\n    arr.map( ( curr ) => {\n      let listeners = getEventListeners( curr );\n      let events = Object.keys(listeners);\n\n      app.showEvents(curr, events, listeners);\n    });\n  };\n\n  // Get identity of element\n  app.getIdentity = ( el ) => {\n    let elClasse = el.getAttribute('class');\n    let elId = el.getAttribute('id');\n    let Identity = (elClasse) ? `.${elClasse}` : `#${elId}`;\n\n    return Identity;\n  }\n\n  app.setStyle = ( el ) => {\n    let style = `top: ${el.offsetTop + 7}px;`;\n        style += `left: ${el.offsetLeft + 7}px;`;\n        style += `position: absolute;`;\n        style += `z-index: 999;`;\n        style += `padding: 5px;`;\n        style += `color: #0ea5a3;`;\n        style += `background-color: #ace0df;`;\n        style += `border: 1px solid #00C2C1;`;\n        style += `font-size: 14px;`;\n        style += `opacity: 0.8;`;\n\n    return style;\n  };\n\n  //Displays the element, event and function.\n  app.showEvents = ( el, events, listners ) => {\n    let newElement = document.createElement('div');\n    let id = app.getIdentity( el );\n    let style = setStyle( el );\n\n    newElement.setAttribute('class', 'event');\n    newElement.setAttribute('style', style);\n\n    events.map(( curr ) => {\n      newElement.innerHTML = `${id} - ${listners[curr][0].type} - ${listners[curr][0].listener.name}()`;\n    });\n\n    document.getElementsByTagName('body')[0].appendChild(newElement);\n  }\n\n\n  //Init functions\n  app.eventListeners = {\n    allElements: getAllElements(),\n\n    elementWithEvent () {\n      return app.elementHasEvent( this.allElements );\n    },\n\n    view () {\n      getEvent( this.elementWithEvent() );\n    },\n\n    console () {\n      this.elementWithEvent().map(( curr ) => {\n        console.log( curr );\n      });\n    }\n  };\n\n})( window, document );\n"],"sourceRoot":"/source/"}