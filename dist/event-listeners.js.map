{"version":3,"sources":["el.js","index.js"],"names":["app","document","getAllElements","Array","from","querySelectorAll","elementHasEvent","arr","hasEvent","filter","curr","events","getEventListeners","Object","keys","length","getEvent","map","listners","showEvents","getIdentity","el","classe","getAttribute","id","idElement","newElement","createElement","style","offsetTop","offsetLeft","setAttribute","innerHTML","listener","name","type","getElementsByTagName","appendChild","eventListeners","allElements","elementWithEvent","window","listeners","elClasse","elId","Identity","this","view","console","_console","apply","arguments","toString","log"],"mappings":"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","file":"event-listeners.js","sourcesContent":["(function( app, document ){\n\n  'use strict';\n\n  // Get all the DOM elements\n  app.getAllElements = () => {\n    return Array.from(document.querySelectorAll('body *'));\n  }\n\n  // Filters only the elements that have event\n  app.elementHasEvent = ( arr ) => {\n    let hasEvent = arr.filter( ( curr ) => {\n      let events = getEventListeners( curr );\n      return Object.keys(events).length > 0;\n    });\n\n    return hasEvent;\n  }\n\n  // Takes the function and the event on the element\n  app.getEvent = ( arr ) => {\n    arr.map( ( curr ) => {\n      let listners = getEventListeners( curr );\n      let events = Object.keys(listners);\n\n      app.showEvents(curr, events, listners);\n\n    });\n  };\n\n  app.getIdentity = ( el ) => {\n    let classe = el.getAttribute('class');\n    let id = el.getAttribute('id');\n    let idElement = (classe) ? classe : id;\n\n    return idElement;\n  }\n\n  //Displays the element, event and function.\n  app.showEvents = ( el, events, listners ) => {\n\n    let newElement = document.createElement('div');\n    let id = app.getIdentity( el );\n    let style = `position: absolute;`;\n        style += `background-color: red;`;\n        style += `z-index: 999999;`;\n        style += `top: ${el.offsetTop}px;`;\n        style += `left: ${el.offsetLeft}px;`;\n\n    newElement.setAttribute('class', 'events');\n    newElement.setAttribute('style', style);\n\n    events.map(( curr ) => {\n      newElement.innerHTML = `[id]: ${id}, [fn name]: ${listners[curr][0].listener.name}, [eventName]: ${listners[curr][0].type}`;\n    });\n\n    document.getElementsByTagName(\"body\")[0].appendChild(newElement);\n  }\n\n\n  //Init functions\n  app.eventListeners = () => {\n    let allElements = getAllElements();\n    let elementWithEvent = elementHasEvent( allElements );\n    getEvent( elementWithEvent );\n  };\n\n})( window, document );\n","(function( app, document ){\n\n  'use strict';\n\n  // Get all the DOM elements\n  app.getAllElements = () => {\n    return Array.from(document.querySelectorAll('body *'));\n  };\n\n  // Filters only the elements that have event\n  app.elementHasEvent = ( arr ) => {\n    let hasEvent = arr.filter( ( curr ) => {\n      let events = getEventListeners( curr );\n      return Object.keys(events).length > 0;\n    });\n\n    return hasEvent;\n  };\n\n  // Takes the function and the event on the element\n  app.getEvent = ( arr ) => {\n    arr.map( ( curr ) => {\n      let listeners = getEventListeners( curr );\n      let events = Object.keys(listeners);\n\n      app.showEvents(curr, events, listeners);\n    });\n  };\n\n  // Get identity of element\n  app.getIdentity = ( el ) => {\n    let elClasse = el.getAttribute('class');\n    let elId = el.getAttribute('id');\n    let Identity = (elClasse) ? elClasse : elId;\n\n    return Identity;\n  }\n\n  //Displays the element, event and function.\n  app.showEvents = ( el, events, listners ) => {\n    let newElement = document.createElement('div');\n    let id = app.getIdentity( el );\n    let style = `position: absolute;`;\n        style += `background-color: red;`;\n        style += `z-index: 999999;`;\n        style += `top: ${el.offsetTop}px;`;\n        style += `left: ${el.offsetLeft}px;`;\n\n    newElement.setAttribute('class', 'events');\n    newElement.setAttribute('style', style);\n\n    events.map(( curr ) => {\n      newElement.innerHTML = `[id]: ${id}, [fn name]: ${listners[curr][0].listener.name}, [eventName]: ${listners[curr][0].type}`;\n    });\n\n    document.getElementsByTagName('body')[0].appendChild(newElement);\n  }\n\n\n  //Init functions\n  app.eventListeners = {\n    allElements: getAllElements(),\n\n    elementWithEvent () {\n      return app.elementHasEvent( this.allElements );\n    },\n\n    view () {\n      getEvent( this.elementWithEvent() );\n    },\n\n    console () {\n      this.elementWithEvent().map(( curr ) => {\n        console.log( curr );\n      });\n    }\n  };\n\n})( window, document );\n"],"sourceRoot":"/source/"}