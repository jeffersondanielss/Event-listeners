{"version":3,"sources":["index.js"],"names":["app","document","getAllElements","Array","from","querySelectorAll","elementHasEvent","arr","hasEvent","filter","curr","events","getEventListeners","Object","keys","length","getEvent","map","listeners","console","log","type","listener","name","showEvents","eventListeners","allElements","elementWithEvent","this","view","_console","apply","arguments","toString","window"],"mappings":"cAAA,SAAWA,EAAKC,GAKdD,EAAIE,eAAiB,WACnB,MAAOC,OAAMC,KAAKH,EAASI,iBAAiB,YAI9CL,EAAIM,gBAAkB,SAAEC,GACtB,GAAIC,GAAWD,EAAIE,OAAQ,SAAEC,GAC3B,GAAIC,GAASC,kBAAmBF,EAChC,OAAOG,QAAOC,KAAKH,GAAQI,OAAS,GAGtC,OAAOP,IAITR,EAAIgB,SAAW,SAAET,GACfA,EAAIU,IAAK,SAAEP,GACT,GAAIQ,GAAYN,kBAAmBF,GAC/BC,EAASE,OAAOC,KAAKI,EAEzBC,SAAQC,IAAR,cAA0BV,GAE1BC,EAAOM,IAAI,SAAEP,GACXS,QAAQC,IAAR,oBAAgCF,EAAUR,GAAM,GAAGW,MACnDF,QAAQC,IAAR,4BAAwCF,EAAUR,GAAM,GAAGY,SAASC,WAO1EvB,EAAIwB,WAAa,aAIjBxB,EAAIyB,gBACFC,YAAaxB,iBAEbyB,iBAHmB,WAIjB,MAAO3B,GAAIM,gBAAiBsB,KAAKF,cAGnCG,KAPmB,WAQjBb,SAAUY,KAAKD,qBAGjBR,QAXmB,SAAAW,GAAA,QAAAX,KAAA,MAAAW,GAAAC,MAAAH,KAAAI,WAAA,MAAAb,GAAAc,SAAA,WAAA,MAAAH,GAAAG,YAAAd,GAAA,WAYjBS,KAAKD,mBAAmBV,IAAI,SAAEP,GAC5BS,QAAQC,IAAKV,SAKjBwB,OAAQjC","file":"event-listeners.js","sourcesContent":["(function( app, document ){\r\n\r\n  'use strict';\r\n\r\n  // Get all the DOM elements\r\n  app.getAllElements = () => {\r\n    return Array.from(document.querySelectorAll('body *'));\r\n  };\r\n\r\n  // Filters only the elements that have event\r\n  app.elementHasEvent = ( arr ) => {\r\n    let hasEvent = arr.filter( ( curr ) => {\r\n      let events = getEventListeners( curr );\r\n      return Object.keys(events).length > 0;\r\n    });\r\n\r\n    return hasEvent;\r\n  };\r\n\r\n  // Takes the function and the event on the element\r\n  app.getEvent = ( arr ) => {\r\n    arr.map( ( curr ) => {\r\n      let listeners = getEventListeners( curr );\r\n      let events = Object.keys(listeners);\r\n\r\n      console.log(`[element]: ${curr}`);\r\n\r\n      events.map(( curr ) => {\r\n        console.log(`[element.event]: ${listeners[curr][0].type}`);\r\n        console.log(`[element.function.name]: ${listeners[curr][0].listener.name}`);\r\n      });\r\n\r\n    });\r\n  };\r\n\r\n  //Displays the element, event and function.\r\n  app.showEvents = () => {};\r\n\r\n\r\n  //Init functions\r\n  app.eventListeners = {\r\n    allElements: getAllElements(),\r\n\r\n    elementWithEvent () {\r\n      return app.elementHasEvent( this.allElements );\r\n    },\r\n\r\n    view () {\r\n      getEvent( this.elementWithEvent() );\r\n    },\r\n\r\n    console () {\r\n      this.elementWithEvent().map(( curr ) => {\r\n        console.log( curr );\r\n      });\r\n    }\r\n  };\r\n\r\n})( window, document );"],"sourceRoot":"/source/"}